import{_ as a,c as n,o as i,a1 as e}from"./chunks/framework.PM4xAEU8.js";const k=JSON.parse('{"title":"npm","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"基础/npm.md","filePath":"基础/npm.md"}'),l={name:"基础/npm.md"},t=e(`<h1 id="npm" tabindex="-1">npm <a class="header-anchor" href="#npm" aria-label="Permalink to &quot;npm&quot;">​</a></h1><h2 id="npm-本地调试" tabindex="-1">npm 本地调试 <a class="header-anchor" href="#npm-本地调试" aria-label="Permalink to &quot;npm 本地调试&quot;">​</a></h2><ol><li>在对应的库文件中，执行 npm link</li><li>在需要使用的项目中，执行 npm link 库的名称。</li><li>如果需要更新，执行 npm update 库的名称。</li><li>如果需要卸载，执行 npm unlink 库的名称/ npm unlink。</li><li>引用本地路径，这个方式并不好。</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;my-local-lib&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;file:libs/my-local-lib&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div><h2 id="问题" tabindex="-1">问题： <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题：&quot;">​</a></h2><ol><li>如果在库代码中加入 debugger，没有触发，可能是因为代码压缩混淆的原因。</li><li>package.json 中的 main 字段，指定了入口文件，如果改成源代码文件，可能会报错，因为代码没有经过打包转换，代码版本太高运行不了。可能得使用 Babel等工具进行转换。</li></ol><h2 id="npm-包管理" tabindex="-1">npm 包管理 <a class="header-anchor" href="#npm-包管理" aria-label="Permalink to &quot;npm 包管理&quot;">​</a></h2><h3 id="_1-npm-init" tabindex="-1">1. npm init <a class="header-anchor" href="#_1-npm-init" aria-label="Permalink to &quot;1. npm init&quot;">​</a></h3><ul><li><strong>作用</strong>：初始化一个新的 npm 项目，生成 <code>package.json</code> 文件。</li><li><strong>命令</strong>：<code>npm init</code> 或 <code>npm init -y</code>（快速生成默认配置）。</li></ul><h3 id="_2-npm-install" tabindex="-1">2. npm install <a class="header-anchor" href="#_2-npm-install" aria-label="Permalink to &quot;2. npm install&quot;">​</a></h3><ul><li><strong>作用</strong>：安装项目依赖。</li></ul><h2 id="发布自己的npm包" tabindex="-1">发布自己的npm包 <a class="header-anchor" href="#发布自己的npm包" aria-label="Permalink to &quot;发布自己的npm包&quot;">​</a></h2><p>npm login //输入npm网站注册的账号<br> npm publish //发布</p>`,13),s=[t];function o(p,r,h,m,d,c){return i(),n("div",null,s)}const _=a(l,[["render",o]]);export{k as __pageData,_ as default};
