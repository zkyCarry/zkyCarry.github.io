import{_ as s,c as a,o as e,a1 as t}from"./chunks/framework.a2TuW1qh.js";const n="/assets/image-2.DvzQ8skl.png",p="/assets/image.CMQm-y1d.png",i="/assets/image-1.CecjRk-C.png",k=JSON.parse('{"title":"git submodule 子模块","description":"","frontmatter":{},"headers":[],"relativePath":"记录/git-submodule.md","filePath":"记录/git-submodule.md"}'),l={name:"记录/git-submodule.md"},o=t('<h1 id="git-submodule-子模块" tabindex="-1">git submodule 子模块 <a class="header-anchor" href="#git-submodule-子模块" aria-label="Permalink to &quot;git submodule 子模块&quot;">​</a></h1><h2 id="应用场景" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景" aria-label="Permalink to &quot;应用场景&quot;">​</a></h2><p>多个项目需要引用同一个项目，比如一个项目是公共库，其他项目需要引用这个公共库，那么就可以使用子模块。</p><h2 id="具体使用" tabindex="-1">具体使用 <a class="header-anchor" href="#具体使用" aria-label="Permalink to &quot;具体使用&quot;">​</a></h2><ul><li><ol><li>把一个公共的子模块，添加到项目，比如放到 src/common 目录下 <img src="'+n+'" alt="alt text"></li></ol></li><li><ol start="2"><li>在page页面，直接引入公共子模块， common/下面的文件。 <img src="'+p+'" alt="alt text"></li></ol></li><li>3 子模块的路径 <img src="'+i+`" alt="alt text"></li></ul><h2 id="流程详细简介" tabindex="-1">流程详细简介 <a class="header-anchor" href="#流程详细简介" aria-label="Permalink to &quot;流程详细简介&quot;">​</a></h2><p>主仓库添加子模块，会生成 .gitmodules 文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>git submodule add -b master https://git.wemomo.com/fe-live-activity-projects/common ./src/common</span></span></code></pre></div><p>更新子模块到最新（已更新忽略）</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>git submodule update --remote</span></span></code></pre></div><p>主仓库新建开发分支，并修改 .gitmodules 文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>// 1、新建分支</span></span>
<span class="line"><span>git checkout -b feat-v1.0</span></span>
<span class="line"><span>// 2、修改 .gitmodules 文件，将branch字段更新为要开发时的子模块分支feat-v1.0</span></span></code></pre></div><p>进入子模块开发，并提交更改</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>// 1、进入子模块</span></span>
<span class="line"><span>cd components</span></span>
<span class="line"><span>// 2、创建开发分支</span></span>
<span class="line"><span>git checkout -b feat-components-v1.0</span></span>
<span class="line"><span>// 3、提交更改</span></span>
<span class="line"><span>git add .</span></span>
<span class="line"><span>git commit -m &#39;update: 更新xxx&#39;</span></span>
<span class="line"><span>git push origin HEAD:feat-components-v1.0</span></span></code></pre></div><p>测试完成以后，更新子模块的master</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>// 1、进入子模块</span></span>
<span class="line"><span>cd components</span></span>
<span class="line"><span>// 2、更新子模块master</span></span>
<span class="line"><span>git checkout master</span></span>
<span class="line"><span>git pull</span></span>
<span class="line"><span>git checkout feat-components-v1.0</span></span>
<span class="line"><span>git merge -m &#39;merge: xxx&#39; master</span></span>
<span class="line"><span>git push</span></span></code></pre></div><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h2><p>主仓库添加子模块，会生成 .gitmodules 文件（已添加忽略）</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>git submodule add -b master https://git.wemomo.com/fe-live-activity-projects/common ./src/common</span></span></code></pre></div><p>拉取子模块更新 --merge 可以避免分离头指针</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>git submodule update --remote --merge</span></span></code></pre></div><p>提交（只要子模块有更新，父仓库都需要提交一次，保持最新的commit引用）</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>add - commit - push</span></span></code></pre></div><p>克隆含有子模块的项目</p><p>方法一、git clone 命令传递 --recurse-submodules 选项</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>git clone --recurse-submodules git@git.wemomo.com:fe-live-activity-projects/live-father.git</span></span></code></pre></div><p>方法二、git clone 以后手动拉取子模块代码</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>git submodule update --init</span></span></code></pre></div><h2 id="参考" tabindex="-1">参考： <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考：&quot;">​</a></h2><p><a href="https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97" target="_blank" rel="noreferrer">https://git-scm.com/book/zh/v2/Git-工具-子模块</a></p>`,30),c=[o];function d(h,u,r,g,m,b){return e(),a("div",null,c)}const _=s(l,[["render",d]]);export{k as __pageData,_ as default};
